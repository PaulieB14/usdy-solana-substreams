// This file is @generated by prost-build.
/// Transaction data structure
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyTransactions {
    #[prost(message, repeated, tag = "1")]
    pub transactions: ::prost::alloc::vec::Vec<UsdyTransaction>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyTransaction {
    #[prost(string, tag = "1")]
    pub signature: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub block_number: u64,
    #[prost(int64, tag = "4")]
    pub block_timestamp: i64,
    #[prost(message, repeated, tag = "5")]
    pub instructions: ::prost::alloc::vec::Vec<UsdyInstruction>,
    #[prost(bool, tag = "6")]
    pub success: bool,
    #[prost(string, tag = "7")]
    pub fee_payer: ::prost::alloc::string::String,
    #[prost(uint64, tag = "8")]
    pub fee: u64,
    #[prost(string, repeated, tag = "9")]
    pub accounts: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyInstruction {
    #[prost(string, tag = "1")]
    pub program_id: ::prost::alloc::string::String,
    #[prost(string, repeated, tag = "2")]
    pub accounts: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, tag = "3")]
    pub data: ::prost::alloc::string::String,
    #[prost(uint32, tag = "4")]
    pub instruction_index: u32,
    #[prost(string, tag = "5")]
    pub instruction_type: ::prost::alloc::string::String,
}
/// Event data structures
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyEvents {
    #[prost(message, repeated, tag = "1")]
    pub events: ::prost::alloc::vec::Vec<UsdyEvent>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyEvent {
    #[prost(string, tag = "1")]
    pub transaction_signature: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub block_number: u64,
    #[prost(int64, tag = "4")]
    pub block_timestamp: i64,
    #[prost(uint32, tag = "5")]
    pub instruction_index: u32,
    #[prost(string, tag = "6")]
    pub event_type: ::prost::alloc::string::String,
    #[prost(oneof = "usdy_event::EventData", tags = "7, 8, 9, 10, 11")]
    pub event_data: ::core::option::Option<usdy_event::EventData>,
}
/// Nested message and enum types in `UsdyEvent`.
pub mod usdy_event {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum EventData {
        #[prost(message, tag = "7")]
        Transfer(super::UsdyTransfer),
        #[prost(message, tag = "8")]
        Mint(super::UsdyMint),
        #[prost(message, tag = "9")]
        Burn(super::UsdyBurn),
        #[prost(message, tag = "10")]
        Approval(super::UsdyApproval),
        #[prost(message, tag = "11")]
        AccountCreation(super::UsdyAccountCreation),
    }
}
/// Transfer event
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyTransfer {
    #[prost(string, tag = "1")]
    pub from: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub to: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub amount: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub authority: ::prost::alloc::string::String,
}
/// Mint event
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyMint {
    #[prost(string, tag = "1")]
    pub to: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub amount: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub mint_authority: ::prost::alloc::string::String,
}
/// Burn event
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyBurn {
    #[prost(string, tag = "1")]
    pub from: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub amount: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub burn_authority: ::prost::alloc::string::String,
}
/// Approval event
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyApproval {
    #[prost(string, tag = "1")]
    pub owner: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub spender: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub amount: ::prost::alloc::string::String,
}
/// Account creation event
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyAccountCreation {
    #[prost(string, tag = "1")]
    pub account: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub owner: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub mint: ::prost::alloc::string::String,
}
/// Holder balance tracking
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyHolderBalance {
    #[prost(string, tag = "1")]
    pub account: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub balance: ::prost::alloc::string::String,
    #[prost(int64, tag = "3")]
    pub last_updated: i64,
}
/// Holder deltas for tracking balance changes
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyHolderDeltas {
    #[prost(message, repeated, tag = "1")]
    pub deltas: ::prost::alloc::vec::Vec<UsdyHolderDelta>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UsdyHolderDelta {
    #[prost(string, tag = "1")]
    pub account: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub old_balance: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub new_balance: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub delta: ::prost::alloc::string::String,
    #[prost(int64, tag = "5")]
    pub timestamp: i64,
    #[prost(string, tag = "6")]
    pub transaction_signature: ::prost::alloc::string::String,
}
